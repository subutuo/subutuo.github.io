{"version":3,"file":"component---src-pages-index-tsx-e8b4744ca7edeea0378e.js","mappings":"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","sources":["webpack://yj-blog/./node_modules/camelcase/index.js","webpack://yj-blog/../src/image-utils.ts","webpack://yj-blog/../src/components/hooks.ts","webpack://yj-blog/../src/components/picture.tsx","webpack://yj-blog/../src/components/layout-wrapper.tsx","webpack://yj-blog/../src/components/placeholder.tsx","webpack://yj-blog/../src/components/main-image.tsx","webpack://yj-blog/../src/components/gatsby-image.browser.tsx","webpack://yj-blog/../src/components/gatsby-image.server.tsx","webpack://yj-blog/../src/components/static-image.server.tsx","webpack://yj-blog/../src/components/static-image.tsx","webpack://yj-blog/./src/components/postGrid/card/centeredImg.tsx","webpack://yj-blog/./src/components/postGrid/card/Tags.tsx","webpack://yj-blog/./src/components/postGrid/card/card.tsx","webpack://yj-blog/./src/components/postGrid/card/index.ts","webpack://yj-blog/./src/components/postGrid/useInfiniteScroll.ts","webpack://yj-blog/./src/components/postGrid/postGrid.tsx","webpack://yj-blog/./src/components/postGrid/index.ts","webpack://yj-blog/./src/components/tagFilter/useScrollCenter.ts","webpack://yj-blog/./src/components/tagFilter/tagFilter.tsx","webpack://yj-blog/./src/components/tagFilter/index.ts","webpack://yj-blog/./src/pages/index.tsx","webpack://yj-blog/./src/styles/category.ts","webpack://yj-blog/./src/styles/dateTime.ts","webpack://yj-blog/./node_modules/lodash/_Symbol.js","webpack://yj-blog/./node_modules/lodash/_arrayMap.js","webpack://yj-blog/./node_modules/lodash/_arrayReduce.js","webpack://yj-blog/./node_modules/lodash/_asciiWords.js","webpack://yj-blog/./node_modules/lodash/_baseGetTag.js","webpack://yj-blog/./node_modules/lodash/_basePropertyOf.js","webpack://yj-blog/./node_modules/lodash/_baseToString.js","webpack://yj-blog/./node_modules/lodash/_createCompounder.js","webpack://yj-blog/./node_modules/lodash/_deburrLetter.js","webpack://yj-blog/./node_modules/lodash/_freeGlobal.js","webpack://yj-blog/./node_modules/lodash/_getRawTag.js","webpack://yj-blog/./node_modules/lodash/_hasUnicodeWord.js","webpack://yj-blog/./node_modules/lodash/_objectToString.js","webpack://yj-blog/./node_modules/lodash/_root.js","webpack://yj-blog/./node_modules/lodash/_unicodeWords.js","webpack://yj-blog/./node_modules/lodash/deburr.js","webpack://yj-blog/./node_modules/lodash/isArray.js","webpack://yj-blog/./node_modules/lodash/isObjectLike.js","webpack://yj-blog/./node_modules/lodash/isSymbol.js","webpack://yj-blog/./node_modules/lodash/kebabCase.js","webpack://yj-blog/./node_modules/lodash/toString.js","webpack://yj-blog/./node_modules/lodash/words.js"],"sourcesContent":["'use strict';\n\nvar preserveCamelCase = function preserveCamelCase(string) {\n  var isLastCharLower = false;\n  var isLastCharUpper = false;\n  var isLastLastCharUpper = false;\n\n  for (var i = 0; i < string.length; i++) {\n    var character = string[i];\n\n    if (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n      string = string.slice(0, i) + '-' + string.slice(i);\n      isLastCharLower = false;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = true;\n      i++;\n    } else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n      string = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = false;\n      isLastCharLower = true;\n    } else {\n      isLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n      isLastLastCharUpper = isLastCharUpper;\n      isLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n    }\n  }\n\n  return string;\n};\n\nvar camelCase = function camelCase(input, options) {\n  if (!(typeof input === 'string' || Array.isArray(input))) {\n    throw new TypeError('Expected the input to be `string | string[]`');\n  }\n\n  options = Object.assign({\n    pascalCase: false\n  }, options);\n\n  var postProcess = function postProcess(x) {\n    return options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n  };\n\n  if (Array.isArray(input)) {\n    input = input.map(function (x) {\n      return x.trim();\n    }).filter(function (x) {\n      return x.length;\n    }).join('-');\n  } else {\n    input = input.trim();\n  }\n\n  if (input.length === 0) {\n    return '';\n  }\n\n  if (input.length === 1) {\n    return options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n  }\n\n  var hasUpperCase = input !== input.toLowerCase();\n\n  if (hasUpperCase) {\n    input = preserveCamelCase(input);\n  }\n\n  input = input.replace(/^[_.\\- ]+/, '').toLowerCase().replace(/[_.\\- ]+(\\w|$)/g, function (_, p1) {\n    return p1.toUpperCase();\n  }).replace(/\\d+(\\w|$)/g, function (m) {\n    return m.toUpperCase();\n  });\n  return postProcess(input);\n};\n\nmodule.exports = camelCase; // TODO: Remove this for the next major release\n\nmodule.exports.default = camelCase;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Node & {\n  childImageSharp?: IGatsbyImageDataParent<Node>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (node: ImageDataLike): IGatsbyImageData | undefined => {\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { Fragment, FunctionComponent } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<ILayoutWrapperProps> =\n  function LayoutWrapper({ children, ...props }) {\n    return (\n      <Fragment>\n        <Sizer {...props} />\n        {children}\n\n        {SERVER ? <NativeScriptLoading /> : null}\n      </Fragment>\n    )\n  }\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        document.addEventListener(`load`, function onLoadListener() {\n          document.removeEventListener(`load`, onLoadListener)\n\n          onStartLoad?.({\n            wasCached: true,\n          })\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import React, { useMemo } from \"react\"\nimport styled from \"styled-components\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage, StaticImage } from \"gatsby-plugin-image\"\nimport type { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nimport type { Query } from \"Types/GraphQL\"\nimport type Post from \"Types/Post\"\nimport img from \"Images/default.jpg\"\n\ninterface CenteredImgProps extends Pick<Post, \"alt\"> {\n  src: Post[\"thumbnail\"]\n}\n\nconst DEFAULT_ALT = \"Thumbnail Image\"\n\nconst CenteredImg: React.FC<CenteredImgProps> = ({ src, alt }) => {\n  const data = useStaticQuery<Query>(graphql`\n    query {\n      allImageSharp {\n        edges {\n          node {\n            id\n            gatsbyImageData(\n              layout: CONSTRAINED\n              aspectRatio: 1.77\n              placeholder: BLURRED\n            )\n          }\n        }\n      }\n    }\n  `)\n\n  const image = useMemo(() => {\n    const imageSharp = data.allImageSharp.edges.find(\n      edge => edge.node.id === src\n    )\n    return imageSharp?.node.gatsbyImageData as IGatsbyImageData\n  }, [src, data.allImageSharp.edges])\n\n  return (\n    <ThumbnailWrapper>\n      <InnerWrapper>\n        {image ? (\n          <GatsbyImage image={image} loading=\"eager\" alt={alt ?? DEFAULT_ALT} />\n        ) : (\n          <StaticImage\n            src={\"./images/default.jpg\"}\n            loading=\"eager\"\n            alt={alt ?? DEFAULT_ALT}\n          />\n        )}\n      </InnerWrapper>\n    </ThumbnailWrapper>\n  )\n}\n\nexport const ThumbnailWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  &::after {\n    content: \"\";\n    display: block;\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    opacity: 0;\n    background-color: var(--color-dimmed);\n    transition: 0.3s ease;\n  }\n`\n\nconst InnerWrapper = styled.div`\n  overflow: hidden;\n`\n\nexport default React.memo(CenteredImg)\n","import React from \"react\"\ntype Props = {\n  tags: string[]\n}\n\nconst Tags = ({ tags }: Props) => {\n  return (\n    <ul className=\"flex flex-wrap gap-y-1 gap-x-2\">\n      {tags.map(tagName => (\n        <li key={tagName} className=\"inline-block\">\n          <span className=\"text-xs inline-block py-1 px-2.5 leading-none text-center whitespace-nowrap align-baseline font-bold bg-[color:var(--color-blue)]  text-[color:var(--color-white)] rounded-full\">\n            {tagName}\n          </span>\n        </li>\n      ))}\n    </ul>\n  )\n}\nexport default Tags\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport type Post from \"Types/Post\"\nimport Category from \"Styles/category\"\nimport DateTime from \"Styles/dateTime\"\nimport CenteredImg from \"./centeredImg\"\nimport Tags from \"./Tags\"\n\ntype CardProps = Pick<\n  Post,\n  \"thumbnail\" | \"alt\" | \"category\" | \"title\" | \"desc\" | \"date\" | \"tags\"\n>\n\nconst Card: React.FC<CardProps> = ({\n  thumbnail,\n  alt,\n  category,\n  title,\n  desc,\n  date,\n  tags,\n}) => {\n  return (\n    <Wrapper className=\"group\">\n      <CenteredImg src={thumbnail} alt={alt} />\n      <Text>\n        <Category>{category}</Category>\n        <div>\n          <Title\n            className=\"inline bg-gradient-to-r from-green-200 to-green-100 dark:from-purple-800 dark:to-purple-900\n          bg-[length:0px_7px]\n          bg-left-bottom\n          bg-no-repeat\n          transition-[background-size]\n          duration-500\n          hover:bg-[length:100%_3px] group-hover:bg-[length:100%_7px]\"\n          >\n            {title}\n          </Title>\n        </div>\n        <Desc>{desc}</Desc>\n        <div>{tags && <Tags tags={tags} />}</div>\n        <DateTime dateTime={date}>{date}</DateTime>\n      </Text>\n    </Wrapper>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  height: 100%;\n  border-radius: var(--border-radius-base);\n  background-color: var(--color-card);\n\n  /* Fix Safari overflow:hidden with border radius not working error */\n  transform: translateZ(0);\n`\n\nconst Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 1 auto;\n  justify-content: space-between;\n  padding: var(--sizing-md);\n\n  & > * {\n    display: block;\n  }\n`\n\nconst Title = styled.h3`\n  margin-top: var(--sizing-xs);\n  font-size: var(--text-lg);\n  font-weight: var(--font-weight-bold);\n  line-height: 1.3;\n\n  @media (max-width: ${({ theme }) => theme.device.md}) {\n    font-size: 1.3125rem;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    font-size: var(--text-md);\n  }\n`\n\nconst Desc = styled.p`\n  line-height: 1.5;\n  margin-top: 8px;\n  padding-bottom: var(--sizing-sm);\n  color: var(--color-text-2);\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  word-break: break-word;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`\n\nexport default React.memo(Card)\n","import Card from \"./card\"\n\nexport default Card\n","import { useState, useEffect, useLayoutEffect, useRef } from \"react\"\n\nimport type Post from \"Types/Post\"\n\ninterface UseInfiniteScrollProps {\n  posts: Post[]\n  scrollEdgeRef: React.RefObject<HTMLDivElement>\n  maxPostNum: number\n  offsetY: number\n}\n\nconst useInfiniteScroll = ({\n  posts,\n  scrollEdgeRef,\n  maxPostNum = 10,\n  offsetY = 400,\n}: UseInfiniteScrollProps) => {\n  const [hasMore, setHasMore] = useState(false)\n  const [currentList, setCurrentList] = useState<Post[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [observerLoading, setObserverLoading] = useState(false)\n\n  const observer = useRef<IntersectionObserver>()\n\n  useLayoutEffect(() => {\n    if (!posts.length || isLoading) return\n    setHasMore(posts.length > maxPostNum)\n    setCurrentList([...posts.slice(0, maxPostNum)])\n    setIsLoading(true)\n  }, [isLoading, posts, maxPostNum])\n\n  useEffect(() => {\n    const loadEdges = () => {\n      const currentLength = currentList.length\n      const more = currentLength < posts.length\n      const nextEdges = more\n        ? posts.slice(currentLength, currentLength + maxPostNum)\n        : []\n      setHasMore(more)\n      setCurrentList([...currentList, ...nextEdges])\n    }\n\n    const scrollEdgeElem = scrollEdgeRef.current\n\n    const option = {\n      rootMargin: `0px 0px ${offsetY}px 0px`,\n      threshold: [0],\n    }\n\n    observer.current = new IntersectionObserver(entries => {\n      if (!hasMore) return\n      entries.forEach(entry => {\n        if (!observerLoading) {\n          setObserverLoading(true)\n          return\n        }\n        if (entry.isIntersecting) loadEdges()\n      })\n    }, option)\n\n    observer.current.observe(scrollEdgeElem!)\n\n    return () => observer.current && observer.current.disconnect()\n  })\n\n  return currentList\n}\n\nexport default useInfiniteScroll\n","import React, { useRef } from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport type Post from \"Types/Post\"\nimport Card from \"./card\"\nimport useInfiniteScroll from \"./useInfiniteScroll\"\nimport { ThumbnailWrapper } from \"./card/centeredImg\"\n\ninterface PostGridProps {\n  posts: Post[]\n}\n\nconst PostGrid: React.FC<PostGridProps> = ({ posts }) => {\n  const scrollEdgeRef = useRef<HTMLDivElement>(null)\n  const currentList = useInfiniteScroll({\n    posts,\n    scrollEdgeRef,\n    maxPostNum: 10,\n    offsetY: 200,\n  })\n\n  return (\n    <Grid role=\"list\">\n      {currentList.map(data => {\n        const { id, slug, title, desc, date, category, thumbnail, alt, tags } =\n          data\n        const ariaLabel = `${title} - ${category} - Posted on ${date}`\n        return (\n          <List key={id} role=\"listitem\">\n            <Link to={slug ?? \"\"} aria-label={ariaLabel}>\n              <Card\n                thumbnail={thumbnail}\n                alt={alt}\n                category={category}\n                title={title}\n                desc={desc}\n                date={date}\n                tags={tags}\n              />\n            </Link>\n          </List>\n        )\n      })}\n      <div ref={scrollEdgeRef} />\n    </Grid>\n  )\n}\n\nconst Grid = styled.ul`\n  display: grid;\n  grid-gap: var(--grid-gap-xl);\n  grid-template-columns: repeat(2, 1fr);\n  list-style: none;\n\n  & > li {\n    margin-bottom: 0;\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-gap: var(--grid-gap-lg);\n  }\n`\n\nconst List = styled.li`\n  box-sizing: border-box;\n  grid-column: span 1;\n\n  a {\n    display: block;\n    height: 100%;\n  }\n\n  a:hover ${ThumbnailWrapper}::after, a:focus ${ThumbnailWrapper}::after {\n    opacity: 1;\n  }\n\n  & .gatsby-image-wrapper {\n    transition: opacity 1s ease-out, transform 0.5s ease;\n  }\n\n  a:hover,\n  a:focus {\n    .gatsby-image-wrapper {\n      transform: scale(1.03);\n    }\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    grid-column: span 2;\n  }\n`\n\nexport default PostGrid\n","import PostGrid from \"./postGrid\"\n\nexport default PostGrid\n","import { useLayoutEffect } from \"react\"\n\ninterface UseScrollCenterProps {\n  ref: React.RefObject<HTMLUListElement>\n  targetId: string\n}\n\nconst useScrollCenter = ({ ref, targetId }: UseScrollCenterProps) => {\n  useLayoutEffect(() => {\n    const categoryWrapEl = ref.current\n\n    if (!categoryWrapEl) {\n      return\n    }\n\n    const isScrollActivated =\n      categoryWrapEl.scrollWidth >= categoryWrapEl.offsetWidth\n\n    if (!isScrollActivated) {\n      return\n    }\n\n    const activeCategoryEl = categoryWrapEl.querySelector<HTMLUListElement>(\n      `#${targetId}`\n    )\n\n    if (!activeCategoryEl) {\n      return\n    }\n\n    const offsetX = activeCategoryEl.offsetLeft - categoryWrapEl.offsetLeft\n    categoryWrapEl.scrollTo(\n      offsetX -\n        categoryWrapEl.offsetWidth / 2 +\n        activeCategoryEl.offsetWidth / 2,\n      0\n    )\n  }, [ref, targetId])\n}\n\nexport default useScrollCenter\n","import React, { useRef } from \"react\"\nimport { Link } from \"gatsby\"\nimport type { GatsbyLinkProps } from \"gatsby\"\nimport styled from \"styled-components\"\nimport kebabCase from \"lodash/kebabCase\"\n\nimport type { MarkdownRemarkGroupConnection } from \"Types/GraphQL\"\nimport useScrollCenter from \"./useScrollCenter\"\n\nconst ACTIVE = \"active\"\n\ninterface TagFilterProps {\n  tagList: MarkdownRemarkGroupConnection[]\n}\n\ntype LinkPropsGetter = GatsbyLinkProps<unknown>[\"getProps\"]\n\nconst TagFilter: React.FC<TagFilterProps> = ({ tagList }) => {\n  const tagRef = useRef<HTMLUListElement>(null)\n  const ALL_TAG_NAME = \"All\"\n  const isActive: LinkPropsGetter = ({ isCurrent }) =>\n    isCurrent ? { id: ACTIVE, tabIndex: -1 } : {}\n\n  useScrollCenter({ ref: tagRef, targetId: ACTIVE })\n\n  return (\n    <Nav aria-label=\"Tag Filter\">\n      <TagTitle>Tag</TagTitle>\n      <TagButton getProps={isActive} to=\"/\">\n        {ALL_TAG_NAME}\n      </TagButton>\n      <Divider />\n      <TagUl\n        ref={tagRef}\n        className=\"md:flex-wrap invisible-scrollbar gap-y-1 gap-x-2\"\n      >\n        {tagList\n          .sort((a, b) => b.totalCount - a.totalCount)\n          .map(tag => {\n            const { fieldValue } = tag\n            return (\n              <li key={fieldValue}>\n                <TagButton\n                  getProps={isActive}\n                  to={`/tag/${kebabCase(fieldValue!)}/`}\n                >\n                  {fieldValue}\n                </TagButton>\n              </li>\n            )\n          })}\n      </TagUl>\n    </Nav>\n  )\n}\n\nconst Nav = styled.nav`\n  display: flex;\n  align-items: center;\n  background-color: var(--color-card);\n  margin-bottom: 48px;\n  padding: 12px var(--sizing-md);\n  border-radius: var(--border-radius-base);\n\n  a#active {\n    color: var(--color-white);\n    background-color: var(--color-blue);\n  }\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    padding: 12px;\n  }\n`\n\nconst TagTitle = styled.em`\n  position: static;\n  width: auto;\n  height: auto;\n  clip: auto;\n  white-space: auto;\n\n  flex-shrink: 0;\n  font-size: var(--text-base);\n  font-weight: var(--font-weight-semi-bold);\n  font-style: initial;\n  margin-right: var(--sizing-lg);\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    clip: rect(1px, 1px, 1px, 1px);\n    white-space: no-wrap;\n  }\n`\n\nconst TagButton = styled(Link)`\n  cursor: pointer;\n  display: block;\n  background-color: var(--color-tag-button);\n  padding: var(--sizing-sm) var(--sizing-base);\n  border-radius: var(--border-radius-base);\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n\n  :focus {\n    outline: none;\n  }\n\n  &:hover {\n    color: var(--color-white);\n    background-color: var(--color-blue);\n  }\n\n  &:focus-visible {\n    color: var(--color-white);\n    background-color: var(--color-blue);\n  }\n`\n\nconst Divider = styled.div`\n  width: 1px;\n  height: 32px;\n  margin: 0 var(--sizing-sm);\n  transform: translateX(-50%);\n  background-color: var(--color-divider);\n`\n\nconst TagUl = styled.ul`\n  display: flex;\n  list-style: none;\n  overflow-x: auto;\n  -ms-overflow-style: none;\n  scrollbar-width: none;\n`\n\nexport default TagFilter\n","import TagFilter from \"./tagFilter\"\n\nexport default TagFilter\n","import React, { useState, useLayoutEffect } from \"react\"\nimport type { PageProps } from \"gatsby\"\nimport { graphql } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport type { Query, MarkdownRemarkFrontmatter } from \"Types/GraphQL\"\nimport type Post from \"Types/Post\"\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\nimport Layout from \"Layouts/layout\"\nimport SEO from \"Components/seo\"\nimport PostGrid from \"Components/postGrid\"\n// import CategoryFilter from \"Components/catetgoryFilter\"\nimport TagFilter from \"Components/tagFilter\"\n\nconst Home = ({\n  pageContext,\n  data,\n}: PageProps<Query, MarkdownRemarkFrontmatter>) => {\n  console.log({ pageContext })\n  const [posts, setPosts] = useState<Post[]>([])\n  const currentTag = pageContext.tag\n  const postData = data.allMarkdownRemark.edges\n\n  useLayoutEffect(() => {\n    const filteredPostData = currentTag\n      ? postData.filter(({ node }) =>\n          node?.frontmatter?.tags?.includes(currentTag as string)\n        )\n      : postData\n\n    filteredPostData.forEach(({ node }) => {\n      const { id } = node\n      const { slug } = node?.fields!\n      const { title, desc, date, category, thumbnail, alt, tags } =\n        node?.frontmatter!\n      const childImageSharp = thumbnail?.childImageSharp\n\n      setPosts(prevPost => [\n        ...prevPost,\n        {\n          id,\n          slug,\n          title,\n          desc,\n          date,\n          category,\n          thumbnail: childImageSharp?.id,\n          alt,\n          tags,\n        },\n      ])\n    })\n  }, [currentTag, postData])\n\n  const site = useSiteMetadata()\n  const postTitle = currentTag ? `Tag : ${currentTag}` : site.postTitle\n\n  return (\n    <Layout>\n      <SEO title=\"Home\" />\n      <Main>\n        <Content>\n          <TagFilter tagList={data.allMarkdownRemark.group} />\n          {/* <CategoryFilter categoryList={data.allMarkdownRemark.group} /> */}\n          <PostTitle>{postTitle}</PostTitle>\n          <PostGrid posts={posts} />\n        </Content>\n      </Main>\n    </Layout>\n  )\n}\n\nconst Main = styled.main`\n  min-width: var(--min-width);\n  min-height: calc(100vh - var(--nav-height) - var(--footer-height));\n  background-color: var(--color-background);\n`\n\nconst Content = styled.div`\n  box-sizing: content-box;\n  width: 87.5%;\n  max-width: var(--width);\n  padding-top: var(--sizing-lg);\n  padding-bottom: var(--sizing-lg);\n  margin: 0 auto;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    padding-top: var(--grid-gap-lg);\n    width: 87.5%;\n  }\n`\n\nconst PostTitle = styled.h2`\n  font-size: 2rem;\n  font-weight: var(--font-weight-extra-bold);\n  margin-bottom: var(--sizing-md);\n  line-height: 1.21875;\n\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\n    font-size: 1.75rem;\n  }\n`\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(posts/blog)/\" } }\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            category\n            date(formatString: \"YYYY-MM-DD\")\n            desc\n            thumbnail {\n              childImageSharp {\n                id\n              }\n              base\n            }\n            alt\n            tags\n          }\n          fields {\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Home\n","import styled from \"styled-components\"\n\nconst Category = styled.span`\n  display: block;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-semi-bold);\n  color: var(--color-text-3);\n`\n\nexport default Category\n","import styled from \"styled-components\"\n\nconst DateTime = styled.time`\n  margin-top: 12px;\n  font-size: 0.875rem;\n  font-weight: var(--font-weight-regular);\n  color: var(--color-text-3);\n`\n\nexport default DateTime\n","var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n","/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nmodule.exports = asciiWords;\n","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n","/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = basePropertyOf;\n","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n","var arrayReduce = require('./_arrayReduce'),\n    deburr = require('./deburr'),\n    words = require('./words');\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nmodule.exports = createCompounder;\n","var basePropertyOf = require('./_basePropertyOf');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nmodule.exports = deburrLetter;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n","var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n","/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nmodule.exports = hasUnicodeWord;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n","var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n","/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nmodule.exports = unicodeWords;\n","var deburrLetter = require('./_deburrLetter'),\n    toString = require('./toString');\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n","var createCompounder = require('./_createCompounder');\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nmodule.exports = kebabCase;\n","var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n","var asciiWords = require('./_asciiWords'),\n    hasUnicodeWord = require('./_hasUnicodeWord'),\n    toString = require('./toString'),\n    unicodeWords = require('./_unicodeWords');\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nmodule.exports = words;\n"],"names":["camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","map","trim","filter","length","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","exports","height","hasNativeLazyLoadSupport","HTMLImageElement","prototype","format","getMainProps","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","getPlaceholderProps","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","result","transition","output","fallbackImage","Sizer","React","paddingTop","maxWidth","display","alt","role","src","LayoutWrapper","children","props","Fragment","q","H","Image","srcSet","decoding","undefined","Picture","fallback","t","sources","sizes","media","type","key","propTypes","PropTypes","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","Error","MainImage","renderImageToStringPromise","renderImage","altValidator","rest","image","imageCache","Set","GatsbyImageHydrator","onError","as","className","preactClass","class","onStartLoad","onLoad","overflow","wStyle","wClass","wrapperProps","root","useRef","cacheKey","useMemo","JSON","stringify","sizer","useEffect","import","then","renderImageToString","swapPlaceholderImage","animationFrame","cleanupCallback","ssrImage","current","querySelector","complete","wasCached","setTimeout","removeAttribute","document","addEventListener","onLoadListener","removeEventListener","add","has","innerHTML","requestAnimationFrame","cancelAnimationFrame","useLayoutEffect","createElement","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","GatsbyImage","memo","warn","checkDimensionProps","validLayouts","StaticImage","GatsbyImageBrowser","__error","imageData","__imageData","console","DEFAULT_ALT","CenteredImg","data","useStaticQuery","imageSharp","allImageSharp","edges","find","edge","node","id","gatsbyImageData","ThumbnailWrapper","InnerWrapper","styled","tags","tagName","Card","thumbnail","category","title","desc","date","Wrapper","Text","Category","Title","Desc","Tags","DateTime","dateTime","theme","device","md","sm","posts","scrollEdgeRef","maxPostNum","offsetY","useState","hasMore","setHasMore","currentList","setCurrentList","setIsLoading","observerLoading","setObserverLoading","observer","scrollEdgeElem","option","rootMargin","threshold","IntersectionObserver","entries","forEach","entry","currentLength","more","nextEdges","isIntersecting","observe","disconnect","Grid","List","useInfiniteScroll","slug","ariaLabel","Link","to","targetId","categoryWrapEl","scrollWidth","offsetWidth","activeCategoryEl","offsetX","offsetLeft","scrollTo","ACTIVE","Nav","TagTitle","TagButton","withConfig","Divider","TagUl","tagList","tagRef","isActive","isCurrent","tabIndex","useScrollCenter","getProps","sort","a","b","totalCount","tag","fieldValue","kebabCase","Main","Content","PostTitle","pageContext","log","setPosts","currentTag","postData","allMarkdownRemark","frontmatter","_node$frontmatter","_node$frontmatter$tag","includes","fields","childImageSharp","prevPost","site","useSiteMetadata","postTitle","Layout","SEO","TagFilter","group","PostGrid","Symbol","array","iteratee","index","accumulator","initAccum","reAsciiWord","match","getRawTag","objectToString","symToStringTag","toStringTag","value","object","arrayMap","isSymbol","symbolProto","symbolToString","toString","baseToString","call","arrayReduce","deburr","words","reApos","RegExp","callback","deburrLetter","basePropertyOf","freeGlobal","g","objectProto","hasOwnProperty","nativeObjectToString","isOwn","unmasked","e","reHasUnicodeWord","freeSelf","self","Function","rsDingbatRange","rsLowerRange","rsUpperRange","rsBreakRange","rsMathOpRange","rsBreak","rsDigits","rsDingbat","rsLower","rsMisc","rsRegional","rsSurrPair","rsUpper","rsMiscLower","rsMiscUpper","rsOptContrLower","rsOptContrUpper","reOptMod","rsModifier","rsOptVar","rsSeq","rsEmoji","reUnicodeWord","reLatin","reComboMark","baseGetTag","isObjectLike","createCompounder","word","asciiWords","hasUnicodeWord","unicodeWords","pattern","guard"],"sourceRoot":""}
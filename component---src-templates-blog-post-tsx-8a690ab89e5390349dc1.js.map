{"version":3,"file":"component---src-templates-blog-post-tsx-8a690ab89e5390349dc1.js","mappings":"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","sources":["webpack://yj-blog/./src/styles/category.ts","webpack://yj-blog/./src/styles/dateTime.ts","webpack://yj-blog/./src/components/comment.tsx","webpack://yj-blog/./src/templates/blogPost.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst Category = styled.span`\r\n  display: block;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default Category\r\n","import styled from \"styled-components\"\r\n\r\nconst DateTime = styled.time`\r\n  margin-top: 12px;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-regular);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default DateTime\r\n","import React, { useRef, useContext, useEffect } from \"react\"\r\n\r\nimport ThemeContext from \"Stores/themeContext\"\r\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\r\nimport { DARK } from \"Constants/theme\"\r\n\r\nconst src = \"https://utteranc.es\"\r\nconst utterancesSelector = \"iframe.utterances-frame\"\r\nconst LIGHT_THEME = \"github-light\"\r\nconst DARK_THEME = \"github-dark\"\r\n\r\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\r\n\r\nconst Comment = () => {\r\n  const site = useSiteMetadata()\r\n  const { repo } = site.utterances ?? { repo: undefined }\r\n  const theme = useContext(ThemeContext)\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const isUtterancesCreated = useRef(false)\r\n\r\n  useEffect(() => {\r\n    if (!repo) return\r\n    let themeMode: ThemeMode\r\n\r\n    if (!isUtterancesCreated.current) {\r\n      themeMode =\r\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\r\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\r\n\r\n    const createUtterancesEl = () => {\r\n      const comment = document.createElement(\"script\")\r\n      const attributes = {\r\n        src: `${src}/client.js`,\r\n        repo,\r\n        \"issue-term\": \"title\",\r\n        label: \"comment\",\r\n        theme: themeMode,\r\n        crossOrigin: \"anonymous\",\r\n        async: \"true\",\r\n      }\r\n      Object.entries(attributes).forEach(([key, value]) => {\r\n        comment.setAttribute(key, value)\r\n      })\r\n      containerRef.current?.appendChild(comment)\r\n      isUtterancesCreated.current = true\r\n    }\r\n\r\n    const utterancesEl = containerRef.current?.querySelector(\r\n      utterancesSelector\r\n    ) as HTMLIFrameElement\r\n\r\n    const postThemeMessage = () => {\r\n      if (!utterancesEl) return\r\n      const message = {\r\n        type: \"set-theme\",\r\n        theme: themeMode,\r\n      }\r\n      utterancesEl?.contentWindow?.postMessage(message, src)\r\n    }\r\n\r\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\r\n  }, [repo, theme])\r\n\r\n  return <div ref={containerRef} />\r\n}\r\n\r\nComment.displayName = \"comment\"\r\n\r\nexport default Comment\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type { Query } from \"Types/GraphQL\"\r\nimport Layout from \"Layouts/layout\"\r\nimport SEO from \"Components/seo\"\r\nimport Comment from \"Components/comment\"\r\nimport { rhythm } from \"Styles/typography\"\r\nimport Category from \"Styles/category\"\r\nimport DateTime from \"Styles/dateTime\"\r\nimport Markdown from \"Styles/markdown\"\r\n\r\ninterface BlogPostProps {\r\n  data: Query\r\n}\r\n\r\nconst BlogPost: React.FC<BlogPostProps> = ({ data }) => {\r\n  const { markdownRemark } = data\r\n  const { frontmatter, html } = markdownRemark!\r\n  const { title, desc, thumbnail, date, category } = frontmatter!\r\n\r\n  const ogImagePath = thumbnail && thumbnail?.childImageSharp?.gatsbyImageData?.src\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} desc={desc} image={ogImagePath!} />\r\n      <main>\r\n        <article>\r\n          <OuterWrapper>\r\n            <InnerWrapper>\r\n              <div>\r\n                <header>\r\n                  <Info>\r\n                    <PostCategory>{category}</PostCategory>\r\n                    <Time dateTime={date}>{date}</Time>\r\n                  </Info>\r\n                  <Title>{title}</Title>\r\n                  <Desc>{desc}</Desc>\r\n                </header>\r\n                <Divider />\r\n                <Markdown\r\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\r\n                  rhythm={rhythm}\r\n                />\r\n              </div>\r\n            </InnerWrapper>\r\n          </OuterWrapper>\r\n        </article>\r\n        <CommentWrap>\r\n          <Comment />\r\n        </CommentWrap>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst OuterWrapper = styled.div`\r\n  margin-top: var(--sizing-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    margin-top: var(--sizing-lg);\r\n  }\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: var(--post-width);\r\n  margin: 0 auto;\r\n  padding-bottom: var(--sizing-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    width: 87.5%;\r\n  }\r\n`\r\n\r\nconst CommentWrap = styled.section`\r\n  width: 100%;\r\n  padding: 0 var(--padding-sm);\r\n  margin: 0 auto;\r\n  margin-bottom: var(--sizing-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst PostCategory = styled(Category)`\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n`\r\n\r\nconst Info = styled.div`\r\n  margin-bottom: var(--sizing-md);\r\n`\r\n\r\nconst Time = styled(DateTime)`\r\n  display: block;\r\n  margin-top: var(--sizing-xs);\r\n`\r\n\r\nconst Desc = styled.p`\r\n  margin-top: var(--sizing-lg);\r\n  line-height: 1.5;\r\n  font-size: var(--text-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    line-height: 1.31579;\r\n    font-size: 1.1875rem;\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-3);\r\n  margin-top: var(--sizing-lg);\r\n  margin-bottom: var(--sizing-lg);\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1.1875;\r\n  font-size: var(--text-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.md}) {\r\n    line-height: 1.21875;\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    line-height: 1.21875;\r\n    font-size: 2rem;\r\n  }\r\n`\r\n\r\nexport const query = graphql`query ($slug: String!) {\r\n  markdownRemark(fields: {slug: {eq: $slug}}) {\r\n    html\r\n    frontmatter {\r\n      title\r\n      desc\r\n      thumbnail {\r\n        childImageSharp {\r\n          gatsbyImageData(placeholder: BLURRED, layout: FIXED)\r\n        }\r\n      }\r\n      date(formatString: \"YYYY-MM-DD\")\r\n      category\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default BlogPost\r\n"],"names":["Category","styled","DateTime","src","LIGHT_THEME","DARK_THEME","Comment","repo","useSiteMetadata","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","themeMode","current","DARK","document","body","dataset","utterancesEl","_containerRef$current2","querySelector","message","type","contentWindow","postMessage","postThemeMessage","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","appendChild","createUtterancesEl","React","ref","displayName","OuterWrapper","device","sm","InnerWrapper","CommentWrap","PostCategory","withConfig","Info","Time","Desc","Divider","Title","md","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","ogImagePath","childImageSharp","_thumbnail$childImage","gatsbyImageData","_thumbnail$childImage2","Layout","SEO","image","dateTime","Markdown","dangerouslySetInnerHTML","__html","rhythm"],"sourceRoot":""}